import telebot
import logging
from config import TELEGRAM_TOKEN
from spotify_api import get_spotify_playlist_tracks, get_spotify_client
from audio_fetcher import download_audio
import os
import time

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(filename='bot.log', level=logging.INFO, 
                    format='%(asctime)s - %(levelname)s - %(message)s')

bot = telebot.TeleBot(TELEGRAM_TOKEN)
user_quality = {}  # –ö–∞—á–µ—Å—Ç–≤–æ –∞—É–¥–∏–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_auth_managers = {}  # –•—Ä–∞–Ω–µ–Ω–∏–µ auth_manager –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

@bot.message_handler(commands=['start'])
def send_welcome(message):
    welcome_text = (
        "üéµ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ —Ç—Ä–µ–∫–æ–≤ –∏–∑ Spotify –≤ Telegram.\n"
        "1. –ò—Å–ø–æ–ª—å–∑—É–π /auth –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Spotify.\n"
        "2. –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–ª–µ–π–ª–∏—Å—Ç.\n"
        "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: /help, /quality"
    )
    bot.reply_to(message, welcome_text)
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")

@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = (
        "üìö **–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞**:\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
        "/auth - –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ Spotify\n"
        "/quality [128/192/320] - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∞—É–¥–∏–æ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 192 kbps)\n"
        "–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–ª–µ–π–ª–∏—Å—Ç Spotify –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è!"
    )
    bot.reply_to(message, help_text)

@bot.message_handler(commands=['auth'])
def spotify_auth(message):
    user_id = message.from_user.id
    sp, auth_manager = get_spotify_client(user_id)
    auth_url = auth_manager.get_authorize_url()
    user_auth_managers[user_id] = auth_manager
    bot.reply_to(message, f"üîó –ü–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Spotify:\n{auth_url}\n–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–¥ –∏–∑ URL (—á–∞—Å—Ç—å –ø–æ—Å–ª–µ `code=`).")
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é Spotify")

@bot.message_handler(func=lambda message: message.text.startswith("code="))
def handle_auth_code(message):
    user_id = message.from_user.id
    if user_id not in user_auth_managers:
        bot.reply_to(message, "‚ùå –°–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π /auth!")
        return
    code = message.text.replace("code=", "").strip()
    auth_manager = user_auth_managers[user_id]
    try:
        auth_manager.get_access_token(code)
        bot.reply_to(message, "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Spotify –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–ª–µ–π–ª–∏—Å—Ç.")
        del user_auth_managers[user_id]  # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª—Å—è –≤ Spotify")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {str(e)}")
        logging.error(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è {user_id}: {str(e)}")

@bot.message_handler(commands=['quality'])
def set_quality(message):
    try:
        quality = message.text.split()[1]
        if quality in ['128', '192', '320']:
            user_quality[message.from_user.id] = quality
            bot.reply_to(message, f"üé∂ –ö–∞—á–µ—Å—Ç–≤–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {quality} kbps")
            logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} —É—Å—Ç–∞–Ω–æ–≤–∏–ª –∫–∞—á–µ—Å—Ç–≤–æ {quality} kbps")
        else:
            bot.reply_to(message, "‚ùå –£–∫–∞–∂–∏ –∫–∞—á–µ—Å—Ç–≤–æ: 128, 192 –∏–ª–∏ 320")
    except IndexError:
        bot.reply_to(message, "‚ùå –£–∫–∞–∂–∏ –∫–∞—á–µ—Å—Ç–≤–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: /quality 320")

@bot.message_handler(func=lambda message: "spotify.com/playlist" in message.text)
def handle_playlist(message):
    user_id = message.from_user.id
    bot.reply_to(message, "üéß –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–ª–µ–π–ª–∏—Å—Ç–∞...")
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–ª–µ–π–ª–∏—Å—Ç: {message.text}")
    
    try:
        tracks, playlist_name, track_count = get_spotify_playlist_tracks(message.text, user_id)
        if not tracks:
            bot.reply_to(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç—Ä–µ–∫–∏. –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω (/auth) –∏ —Å—Å—ã–ª–∫–∞ –≤–µ—Ä–Ω–∞!")
            return
        
        quality = user_quality.get(user_id, "192")
        bot.send_message(message.chat.id, f"üìÄ –ü–ª–µ–π–ª–∏—Å—Ç: *{playlist_name}*\n–¢—Ä–µ–∫–æ–≤: {track_count}\n–ö–∞—á–µ—Å—Ç–≤–æ: {quality} kbps")
        
        processed = 0
        for track in tracks:
            processed += 1
            progress = f"[{processed}/{track_count}] ({int(processed/track_count*100)}%)"
            bot.send_message(message.chat.id, f"‚¨áÔ∏è {progress} –°–∫–∞—á–∏–≤–∞—é: *{track['name']}* - {track['artist']}")
            try:
                audio_file = download_audio(track['name'], track['artist'], quality)
                with open(audio_file, 'rb') as audio:
                    bot.send_audio(message.chat.id, audio, title=track['name'], performer=track['artist'])
                os.remove(audio_file)
                logging.info(f"–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: {track['name']} –¥–ª—è {user_id}")
            except Exception as e:
                bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ *{track['name']}*: {str(e)}")
                logging.error(f"–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è {track['name']} –¥–ª—è {user_id}: {str(e)}")
        
        bot.send_message(message.chat.id, f"‚úÖ –ì–æ—Ç–æ–≤–æ! –í—Å–µ —Ç—Ä–µ–∫–∏ –∏–∑ *{playlist_name}* –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")
        logging.info(f"–ó–∞–≤–µ—Ä—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ {playlist_name} –¥–ª—è {user_id}")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        logging.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞ –¥–ª—è {user_id}: {str(e)}")

@bot.message_handler(func=lambda message: True)
def echo_all(message):
    bot.reply_to(message, "ü§î –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–ª–µ–π–ª–∏—Å—Ç Spotify –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.")

try:
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...")
    bot.polling()
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {str(e)}")
    logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {str(e)}")